package patterns.facade;

/**
 *  为系统中的一组接口提供一个一致的界面，Facade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。

    何时使用

    需要的时候。需要的时候太多了
    优点

    看了下面你的介绍，就知道外观模式可以让一个系统更加容易使用
    外观模式是一种很简单的模式，我们有意无意都在使用这种模式。

    我们提供给用户的某个功能，可能是包含很多个步骤的，但我们可以把这些步骤封装到一个统一的接口中，让用户感觉仅仅就是一个单一的操作，使用起来也就更加简单。

    比如说，我们往回一些年，那时候的相机不是每个人都会用的，按下快门前还需要调焦等操作，然而现在呢，我们拍照只需要按下快门就行了，中间的一系列操作都被自动执行了。外观模式也就是提供这样一种机制。

    我们在使用一个有代码的例子：用户要购买一件商品，系统首先会判断库存，然后要计算费用（商品价格，邮费和优惠等），最后才会生成一个订单。这其中就包含几个子系统，库存管理子系统和计费子系统，而计费子系统又分更小的子系统（此处两处使用到外观模式）。
 * @author Administrator
 *
 */

//获取商品价格
public class ProductPrice {
	int getPrice(String product) {
		return Math.abs(product.hashCode());// 模拟获取商品价格
	}
}